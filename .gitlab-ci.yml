.globals: &globals
  tags:
  - windows
  - dynamorio

.testing: &testing
  variables:
    GIT_STRATEGY: "none"


variables:
  PROJECT_NAME: "DRace"
  GIT_SUBMODULE_STRATEGY: "normal"
  DRRUN_EXE: "C:\\opt\\DynamoRIO-Windows-7.91.18219-0\\bin64\\drrun.exe"
  _NT_SYMBOL_PATH: "SRV*c:\\symbolcache\\*https://msdl.microsoft.com/download/symbols"
  http_proxy: "$CODE_PROXY"
  https_proxy: "$CODE_PROXY"
  no_proxy: "127.0.0.1,localhost,.siemens.de,.siemens.net,.siemens.com,.siemens.io"
  
stages:
  - generate
  - validate
  - build
  - test
  - package

cmake:
  <<: *globals
  stage: generate
  script:
  - echo "Release build..."
  - .\contrib\generate-ci.bat
  artifacts:
    paths:
    - build-tsan-dr791
        
compile:
  <<: *globals
  stage: build
  except:
  - doc-*    
  script:
  - echo "Release build..."
  - .\contrib\build-ci.bat
  artifacts:
    paths:
    - build-tsan-dr791
  dependencies:
  - cmake

cppcheck:
  <<: *globals
  stage: validate
  script:
  - cd build-tsan-dr791;  C:\opt\Cppcheck\cppcheck.exe  --project=compile_commands.json --enable=all --inline-suppr --suppressions-list=suppressions.txt --error-exitcode=1 --quiet
  dependencies:
  - cmake

#
# Test all builds
#

detector-test:
  <<: *globals
  <<: *testing
  stage: test
  script:
  - cd build-tsan-dr791
  - echo "Use DR 7.91.x"
  - .\test\drace-unit-tests.exe --gtest_output="xml:test-unit-results.xml"
  - .\test\drace-system-tests.exe --gtest_output="xml:test-system-results.xml"
  artifacts:
    reports:
      junit:
      - build-tsan-dr791\test-unit-results.xml
      - build-tsan-dr791\test-system-results.xml
  dependencies:
  - compile

report-converter-test:
  stage: test 
  tags: 
  - AWS
  script:
  - echo "Start test..."
  - python3 tools/ReportConverter/ReportConverter.py -i tools/ReportConverter/test_files/helgrind.xml
  - python3 tools/ReportConverter/ReportConverter.py --Debug
  - python3 tools/ReportConverter/ReportConverterUnitTest.py

reuse-compliant:
  stage: generate
  image: python:latest
  tags:
  - DOCKER
  before_script:
    - python3 -m venv ../venv
    - . ../venv/bin/activate
    - pip3 install fsfe-reuse
    - git clean -f -d
  script:
  - reuse lint

# Package
bundle:
  <<: *globals
  stage: package
  script:
  - Copy-Item "contrib/package.json" -Destination "."
  - Copy-Item "contrib/package-lock.json" -Destination "."
  - echo "Generate Changelog"
  - npx generate-changelog
  - Copy-Item "CHANGELOG.md" -Destination "build-tsan-dr791/package/doc/"
  dependencies:
  - compile
  artifacts:
    paths:
    - build-tsan-dr791/package
